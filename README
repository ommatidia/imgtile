This is a very lightweight application meant to break down large images into tile sections parameterized by an exponential zoom, and the corresponding x and y coordinates.

Dependencies:
build-essentials
imagemagik
others... todo

Usage:
./imgtile {srcimg} {output_directory=./}

TODO:
parameterize zoom levels, calculate optimal tile size such that deepest zoom level requires no pixel level changes from the original image.

Scripts:
========

This can be used with any image or set of images, but the included scripts were originally developed for use with the datasets hosted at archimedespalimpsest.net and digitalgalen.net

As such, once all relevant files have been rsync'd the included scripts can be used to batch process them

Usage:

$ARCH_HOME=~/path/to/archimedes_dataset
$TILE_HOME=~/path/to/tile_storage

ls -R $ARCH_HOME | ./formatPath.py 1> img_list_to_process.txt 2> /dev/null
./run_tiles.py -f img_list_to_process.txt --layer -d $TILE_HOME -t local

If for some reason you need to update a single image later, for instance, if you had to rotate and retile:
./run_tiles.py $ARCH_HOME/path/to/image -d TILE_HOME --layer -t local

for the moment be careful to backup your dictionary. I will either be adding a --dict option that skips tiling but generates the json metadata as if all had been processed, or read in the existing version and performing a union with the set of images currently being processed.